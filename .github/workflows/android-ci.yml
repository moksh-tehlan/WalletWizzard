name: Android Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: master

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Create .env directory
        run: mkdir -p .env

      - name: Create .production file
        run: |
          echo 'BASE_URL="${{ secrets.BASE_URL }}"' > .env/.production
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> .env/.production
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> .env/.production
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> .env/.production
          echo "STORE_FILE=${{ secrets.STORE_FILE }}" >> .env/.production
          echo "ENABLE_LOGGING=${{ secrets.ENABLE_LOGGING }}" >> .env/.production

      # Create app/keystores directory and decode the keystore file
      - name: Decode and create keystore
        run: |
          mkdir -p app/keystores
          echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 --decode > app/keystores/wallet-wizzard.jks

      # Decode and create google-services.json
      - name: Decode and create google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew assembleProductionRelease

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/production/release/app-production-release.apk

      - name: Display structure of build files
        run: ls -R app/build/outputs/apk/production/release/